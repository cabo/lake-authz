{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-01-28T01:10:19.175908+00:00",
  "repo": "lake-wg/authz",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOKiCa6c54mu3L",
      "title": "Voucher is not bound to U",
      "url": "https://github.com/lake-wg/authz/issues/1",
      "state": "OPEN",
      "author": "geonnave",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "This was previously discussed in the IETF-118, and the goal is to discuss whether it is desirable / necessary to have the voucher be bound to U.\r\n\r\nOne open question here is: how can V be sure that the Voucher received from W is bound to the sender of message_3?",
      "createdAt": "2023-12-04T09:40:17Z",
      "updatedAt": "2023-12-04T14:45:34Z",
      "closedAt": null,
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "NONE",
          "body": "In a design team meeting last Friday (Dec 1) the following comments were raised:\r\n- the Voucher is protected by EDHOC session via the transcript hash\r\n- there is a consideration about doing authorization before authentication, that needs to be checked",
          "createdAt": "2023-12-04T09:42:03Z",
          "updatedAt": "2023-12-04T14:45:34Z"
        },
        {
          "author": "sftcd",
          "authorAssociation": "NONE",
          "body": "\r\n\r\nOn 04/12/2023 09:42, Geovane Fedrecheski wrote:\r\n> In a meeting last Friday (Dec 1)\r\n\r\nWhat meeting was that? (Even though this is only a github comment,\r\nit's generally good to document that kind of thing so the IETF WG\r\ncan better evaluate outcomes from such a meeting.)\r\n\r\nTa,\r\nS.\r\n",
          "createdAt": "2023-12-04T11:24:44Z",
          "updatedAt": "2023-12-04T11:24:44Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@sftcd Good question. This was a design team meeting following up on the comments from IETF 118. Geovane is holding the pen driving the work forward :-)",
          "createdAt": "2023-12-04T13:49:43Z",
          "updatedAt": "2023-12-04T13:49:43Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(@geonnave Maybe edit comments and make global replace \"meeting\" -> \"design team meeting\".)",
          "createdAt": "2023-12-04T14:37:06Z",
          "updatedAt": "2023-12-04T14:37:06Z"
        }
      ]
    },
    {
      "number": 2,
      "id": "I_kwDOKiCa6c54mwA6",
      "title": "Add EAD_3 field?",
      "url": "https://github.com/lake-wg/authz/issues/2",
      "state": "OPEN",
      "author": "geonnave",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "After receiving message_3, V may want to check that CRED_U is bound to the voucher received from W (see #1). In this case, V would need to (1) have the voucher saved on state, and (2) it would have to dispatch a \"check CRED_U against Voucher\" action.\r\n\r\nRight now, on the implementation side, dispatching any EAD-related action is done via detecting the presence of an EAD field (since the core EDHOC implementation must be agnostic of EAD items).\r\n\r\nThus, it may make sense to add an EAD_3 field to enable such a dispatch.",
      "createdAt": "2023-12-04T09:42:50Z",
      "updatedAt": "2023-12-04T14:45:59Z",
      "closedAt": null,
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "NONE",
          "body": "As discussed in the design team meeting, the next step is to think of additional scenarios where this might be needed (if any).",
          "createdAt": "2023-12-04T09:43:30Z",
          "updatedAt": "2023-12-04T14:45:59Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOKiCa6c54mweB",
      "title": " Should the voucher include a scope?",
      "url": "https://github.com/lake-wg/authz/issues/3",
      "state": "OPEN",
      "author": "geonnave",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "During the IETF-118 meeting, it was discussed whether the Voucher should include a scope. One simple alternative would be to propose an opaque \"scope\" field whose usage details would be left to the application.",
      "createdAt": "2023-12-04T09:43:53Z",
      "updatedAt": "2023-12-04T14:46:22Z",
      "closedAt": null,
      "comments": [
        {
          "author": "geonnave",
          "authorAssociation": "NONE",
          "body": "As discussed in the last design team meeting, we do plan to include a scope field. That may involve updating the Voucher structure to be a COSE_Encrypt0, where ciphertext is the concatenation of encrypted-plaintext (empty) and the voucher MAC. The scope can then be included in the encrypted-plaintext or in the (un)protected header. \r\n\r\nThe scope would convey information to U about V, such as capabilities of V, usage policies, etc. I think we need to think of a few concrete examples here.",
          "createdAt": "2023-12-04T09:51:42Z",
          "updatedAt": "2023-12-04T14:46:22Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOKiCa6c58nPKX",
      "title": "Add error handling",
      "url": "https://github.com/lake-wg/authz/issues/5",
      "state": "OPEN",
      "author": "geonnave",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The protocol should include an error handling mechanism. Below is a first sketch as well as a few considerations to be discussed:\r\n\r\n```\r\nW may answer Voucher Request with a Voucher Error (VERR):\r\n\r\nVERR = (code: uint, ?info: bstr)\r\n```\r\n\r\nNotes:\r\n- security: VERR should be encrypted and integrity-protected, e.g. `COSE_Encrypt0` from W to U, just like `ENC_ID` on `EAD_1`\r\n- how to transport: \r\n  - W to V: the encrypted VERR is sent via the secure channel already established between both parties\r\n  - V to U: we can possibly reuse EDHOC's error signalling (see [lake-edhoc#section-6](https://www.ietf.org/archive/id/draft-ietf-lake-edhoc-22.html#section-6)). Thus the encrypted VERR could be the content of `ERR_INFO`. Note that this might require declaring a new EDHOC `ERR_CODE`, so that `ERR_INFO` can have a content of type `bstr`.\r\n\r\ncc @gselander @malishav ",
      "createdAt": "2024-01-19T14:15:31Z",
      "updatedAt": "2024-01-19T14:15:31Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 6,
      "id": "I_kwDOKiCa6c58nZaT",
      "title": "Appendix or Examples section",
      "url": "https://github.com/lake-wg/authz/issues/6",
      "state": "OPEN",
      "author": "geonnave",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "A section with example use cases for the protocol can improve readability of the spec.\r\n\r\nHere is a brief list of use cases that can serve as base for such section:\r\n\r\n```\r\n### UC1: voucher works, 1 gateway\r\n\r\npremises:\r\n- devices = [u1, \u2026]\r\n- discovered_gateways = [v1]\r\n- W\u2019s allowlist = v1: [u1]\r\n\r\nscenarios:\r\n1. device u1 tries to join via gateway v1, W accepts and replies Voucher Response\r\n\r\n### UC2: basic error response, 1 gateway\r\n\r\npremises:\r\n- devices = [u1, \u2026]\r\n- discovered_gateways = [v1]\r\n- W\u2019s allowlist = v1: []\r\n\r\nscenarios:\r\n1. device u1 tries to join via gateway v1, W denies and replies Voucher Error\r\n\r\n### UC3: basic error response, 5 gateways\r\n\r\npremises:\r\n- devices = [u1, \u2026]\r\n- discovered_gateways = [v1, v2, v3, v4, v5] // sorted e.g. by rssi\r\n- W\u2019s allowlist = v1: [], v2: [], v3: [u1], v4: [u1], v5: []\r\n\r\nscenarios:\r\n1. device u1 tries to join via gateway v1, W denies and replies Voucher Error\r\n2. device u1 tries to join via gateway v2, W denies and replies Voucher Error\r\n3. device u1 tries to join via gateway v3, W accepts and replies Voucher Response\r\n\r\n### UC4: error includes gateway hint, 5 gateways\r\n\r\npremises:\r\n- devices = [u1, \u2026]\r\n- discovered_gateways = [v1, v2, v3, v4, v5] // sorted e.g. by rssi\r\n- W\u2019s allowlist = v1: [], v2: [], v3: [u1], v4: [u1], v5: []\r\n\r\nscenarios:\r\n1. device u1 tries to join via gateway v1, W denies and replies Voucher Error with hint = [v3, v4]\r\n2. device u1 tries to join via gateway v3, W accepts and replies Voucher Response\r\n```",
      "createdAt": "2024-01-19T14:40:26Z",
      "updatedAt": "2024-01-26T12:16:42Z",
      "closedAt": null,
      "comments": [
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Looks good to me. I think UC1 & UC4 (scenario 1) could be sufficient, perhaps start with them?",
          "createdAt": "2024-01-26T12:16:41Z",
          "updatedAt": "2024-01-26T12:16:41Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOKiCa6c58naZT",
      "title": "Device enrollment in the presence of many Vs",
      "url": "https://github.com/lake-wg/authz/issues/7",
      "state": "OPEN",
      "author": "geonnave",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The access policies in W may contain a mapping of which Us are authorized to join via which Vs, e.g. `{v1: [u1, u2], v2: [u3]}`. In this case, if a device detects many Vs in its vicinity, it may have to try to exhaustively try to enroll via different Vs until it finds the right one (see use case UC3 in issue #6).\r\n\r\nA possible solution includes sharing more information between V and W, so that this process can be sped up. Here is an initial sketch of how it could look like:\r\n\r\n```\r\n# Enrollment hints\r\nThis section defines optional fields with the purpose of improving protocol scalability, aiming to reduce battery usage and enrollment delay.\r\nThe main use case is when several potential gateways (V) are detected by U's radio, which can lead to U trying to enroll (and failing) several times until it finds a suitable V.\r\n\r\n## Domain Authenticator hints\r\nIn case W denies the enrollment of U to a given V, a list of Domain Authenticator hints (v_hints) can be sent from W to U.\r\nThe hint is optional and is sent as part of an error message.\r\nIt consists of a list of application-defined identifiers of V (e.g. MAC addresses, SSIDs, PAN IDs, etc.), as defined below:\r\n\r\nv_hints = [ 1* bstr ]\r\n\r\n## Device hints\r\nU may send a Device hint (u_hint) so that it can help W to select which Vs to include in v_hints.\r\nThis can be useful in large scale scenarios with many gateways (V).\r\nThe hint is an optional field in EAD_1, and it must be encrypted.\r\nThe hint itself is application dependent, and can contain GPS coordinates, application-specific tags, the list of Vs detected by U, or other relevant information.\r\nIt is defined as follows:\r\n\r\nu_hint: [ 1* bstr ]\r\n```\r\n\r\nNotes:\r\n- related to #5, as `v_hint` would be carried in the Voucher Error message\r\n- all hints should be encrypted and integrity-protected, e.g., via `COSE_Encrypt0`",
      "createdAt": "2024-01-19T14:42:53Z",
      "updatedAt": "2024-01-19T14:42:53Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 4,
      "id": "PR_kwDOKiCa6c5hCE4Q",
      "title": "Implementation notes",
      "url": "https://github.com/lake-wg/authz/pull/4",
      "state": "OPEN",
      "author": "geonnave",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "There are 3 clarifications in separate commits. I am not totally sure if the consideration about credentials by value should be in the introduction, but I wanted them to be upfront in the document since it is a requirement to EDHOC implementations who wish to support this.",
      "createdAt": "2023-12-04T09:58:22Z",
      "updatedAt": "2024-01-26T11:10:44Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "048c37dcfb72a09c7c4e691611897123384e2838",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "implementation-notes",
      "headRefOid": "4b965bc494e57320211e6437669339f3475cb2b3",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Looks good, I made some editorial changes.\r\n\r\n(For some reason editor's copy won't update, don't understand why.) ",
          "createdAt": "2024-01-26T11:10:43Z",
          "updatedAt": "2024-01-26T11:10:43Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 8,
      "id": "PR_kwDOKiCa6c5lEemS",
      "title": "Update links to new repository at lake-wg",
      "url": "https://github.com/lake-wg/authz/pull/8",
      "state": "OPEN",
      "author": "geonnave",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-25T14:07:33Z",
      "updatedAt": "2024-01-25T14:12:06Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "048c37dcfb72a09c7c4e691611897123384e2838",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "update-links-to-new-repo",
      "headRefOid": "2e774da3036612abee259e6e725b618fe4f12b39",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKiCa6c5t5rvh",
          "commit": {
            "abbreviatedOid": "2e774da"
          },
          "author": "gselander",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-25T14:12:06Z",
          "updatedAt": "2024-01-25T14:12:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOKiCa6c5lI2rP",
      "title": "Add error section",
      "url": "https://github.com/lake-wg/authz/pull/9",
      "state": "OPEN",
      "author": "geonnave",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Adding an error handling section. Work in progress.",
      "createdAt": "2024-01-26T08:45:49Z",
      "updatedAt": "2024-01-26T08:45:49Z",
      "baseRepository": "lake-wg/authz",
      "baseRefName": "master",
      "baseRefOid": "048c37dcfb72a09c7c4e691611897123384e2838",
      "headRepository": "geonnave/lake-authz",
      "headRefName": "add-error-section",
      "headRefOid": "7f416daf06f631e353fe65155eac9c1d9ffdd923",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}